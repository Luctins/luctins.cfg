# -*- mode:sh; -*-


# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
#if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

export EDITOR=vim

HISTFILESIZE=50000000

HISTSIZE=100000

unsetopt share_history
setopt INC_APPEND_HISTORY_TIME
setopt extendedglob


# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# oh-my-zsh setup --------------------------------------------------------------

# Path to your oh-my-zsh installation.
export ZSH="/home/$USER/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="false"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"
# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    python git zsh-autosuggestions rust python ripgrep svn node man
    colored-man-pages env docker
)

source $ZSH/oh-my-zsh.sh

# ------------------------------------------------------------------------------

# Functions
function __insert_env() {
    # check array initialized
    if [[ "${(t)ENV}" =~ 'array*' ]]; then
        # test value already in array
        for E in ${ENV[@]}; do
            if [[ "$E" == "$1" ]]; then
                return
            fi
        done
        ENV+="$1"
        export ENV
    else
        ENV=( "$1" )
    fi
}

function prompt_env_var() {
		if [ ! -z "$ENV" ]; then
			 p10k segment -b "#850E84" -f white -i 'â’º ' -t "${(j|:|)ENV[@]}"
		fi
}

function print_eval () {
    echo "$1"
    eval $1
}

# Enable Syntax Highlighting if available
zsh_syntax_h=/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

if [[ -f ${zsh_syntax_h} ]]; then
  source ${zsh_syntax_h};
fi

#load environment
if [[ -f ~/.env ]]; then
  source ~/.env
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

if [ -n $(which direnv) ]; then
    eval "$(direnv hook zsh)"
fi



# ---------------------------------------------------------------------------- #
# AUTOGENERATED -------------------------------------------------------------- #
# ---------------------------------------------------------------------------- #

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/luctins/.local/share/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/luctins/.local/share/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/luctins/.local/share/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/luctins/.local/share/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

compinit -d "$XDG_CACHE_HOME"/zsh/zcompdump-"$ZSH_VERSION"

export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
